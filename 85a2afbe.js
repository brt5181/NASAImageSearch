import{r as e,$ as t,s as i}from"./aa05e036.js";import{I as s}from"./85970b5c.js";import{U as a}from"./4c5e5b97.js";class r extends(s(i)){static get styles(){return[e`:host{display:block;--wikipedia-query-body-height:160px;--wikipedia-query-background-color:#f8f8f8}:host [hidden]{display:none}#result{height:var(--wikipedia-query-body-height);overflow:scroll;border:1px grey solid;padding:8px 16px}citation-element{background-color:var(--wikipedia-query-background-color);padding:16px 8px;font-size:12px}`]}constructor(){super(),this.hideTitle=!1;const e=document.body.getAttribute("xml:lang")||document.body.getAttribute("lang")||document.documentElement.getAttribute("xml:lang")||document.documentElement.getAttribute("lang")||navigator.language||"en";this.language=e.split("-")[0],this.headers={cache:"force-cache"};let t=new Date(Date.now());this.__now=t.getDate()+"/"+(t.getMonth()+1)+"/"+t.getFullYear()}static get tag(){return"wikipedia-query"}render(){return t` ${this.elementVisible?t` <h3 .hidden="${this.hideTitle}" part="heading-3"> ${this._title} </h3> <div id="result"></div> <citation-element creator="{Wikipedia contributors}" scope="sibling" license="by-sa" title="${this.search} --- {Wikipedia}{,} The Free Encyclopedia" source="https://${this.language}.wikipedia.org/w/index.php?title=${this.search}" date="${this.__now}"></citation-element>`:""}`}updateArticle(e,t,i){fetch(`https://${i}.wikipedia.org/w/api.php?origin=*&action=query&titles=${e}&prop=extracts&format=json`,t).then((e=>{if(e.ok)return e.json()})).then((e=>{this.handleResponse(e)}))}updated(e){e.forEach(((e,t)=>{"elementVisible"==t&&this[t]&&import("./56772143.js"),["elementVisible","search","headers","language"].includes(t)&&this.search&&this.headers&&this.elementVisible&&this.language&&(clearTimeout(this._debounce),this._debounce=setTimeout((()=>{this.updateArticle(this.search,this.headers,this.language)}),10)),"search"==t&&(this.title?this._title=this.title:this._title=this[t].replace("_"," ")+" Wikipedia article"),"title"==t&&this.title&&(this._title=this.title)}))}static get properties(){let e={};return super.properties&&(e=super.properties),{...e,title:{type:String},__now:{type:String},_title:{type:String},headers:{type:Object},hideTitle:{type:Boolean,attribute:"hide-title"},search:{type:String},language:{type:String}}}handleResponse(e){if(void 0!==e&&e.query)for(var t in e.query.pages)if(e.query.pages.hasOwnProperty(t)&&e.query.pages[t].extract){let i=e.query.pages[t].extract;i=i.replace(/<script[\s\S]*?>/gi,"&lt;script&gt;"),i=i.replace(/<\/script>/gi,"&lt;/script&gt;"),i=i.replace(/<style[\s\S]*?>/gi,"&lt;style&gt;"),i=i.replace(/<\/style>/gi,"&lt;/style&gt;"),this.shadowRoot.querySelector("#result").innerHTML=i}}haxHooks(){return{gizmoRegistration:"haxgizmoRegistration"}}haxgizmoRegistration(e){window.dispatchEvent(new CustomEvent("i18n-manager-register-element",{detail:{namespace:"wikipedia-query.haxProperties",localesPath:new URL("./locales",import.meta.url).href,locales:["es","fr"]}})),e.validGizmoTypes.push("wikipedia"),0===e.appList.filter(((e,t)=>e.connection.url===this.language+".wikipedia.org")).length&&window.dispatchEvent(new CustomEvent("hax-register-app",{bubbles:!1,composed:!1,cancelable:!1,detail:this.haxAppDetails}))}get haxAppDetails(){return{details:{title:"Wikipedia",icon:"account-balance",color:"grey",author:"Wikimedia",description:"Encyclopedia of the world.",status:"available",tags:["content","encyclopedia","wiki"]},connection:{protocol:"https",url:this.language+".wikipedia.org",data:{action:"query",list:"search",format:"json",origin:"*"},operations:{browse:{method:"GET",endPoint:"w/api.php",pagination:{style:"offset",props:{offset:"sroffset"}},search:{srsearch:{title:"Search",type:"string"}},data:{},resultMap:{image:"https://"+this.language+".wikipedia.org/static/images/project-logos/enwiki.png",defaultGizmoType:"wikipedia",items:"query.search",preview:{title:"title",details:"snippet",id:"title"},gizmo:{_url_source:"https://"+this.language+".wikipedia.org/wiki/<%= id %>",id:"title",title:"title",caption:"snippet",description:"snippet"}}}}}}}static get haxProperties(){return new URL(`./lib/${this.tag}.haxProperties.json`,import.meta.url).href}}customElements.define(r.tag,r);class o extends i{static get tag(){return"location-from-ip"}constructor(){super(),this.UserIpInstance=new a,this.locationEndpoint="https://freegeoip.app/json/",this.long=null,this.lat=null}static get properties(){return{long:{type:Number,reflect:!0},lat:{type:Number,reflect:!0},city:{type:String,reflect:!0},region_name:{type:String,reflect:!0}}}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.getGEOIPData()}async getGEOIPData(){const e=new a,t=await e.updateUserIP();return fetch(this.locationEndpoint+t.ip).then((e=>!!e.ok&&e.json())).then((e=>(console.log(e),this.lat=e.latitude,this.long=e.longitude,this.city=e.city,this.state=e.region_name,e)))}static get styles(){return[e`:host{display:block}iframe{height:500px;width:500px}`]}render(){const e=`https://maps.google.com/maps?q=${this.lat},${this.long}&t=&z=15&ie=UTF8&iwloc=&output=embed`;return t`<iframe title="Where you are" src="${e}"></iframe> <ul> <a href="https://www.google.com/maps/@${this.lat},${this.long},14z"> Open in Google Maps </a> </ul> <script> window.__appCDN = 'https://cdn.webcomponents.psu.edu/cdn/'; </script> <script src="https://cdn.webcomponents.psu.edu/cdn/build.js"></script> <wikipedia-query search="${this.city}, ${this.state}"></wikipedia-query> <wikipedia-query search="${this.city}"></wikipedia-query> <wikipedia-query search="${this.state}"></wikipedia-query> `}}customElements.define(o.tag,o);
